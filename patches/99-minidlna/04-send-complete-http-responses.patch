--- a/upnphttp.c
+++ b/upnphttp.c
@@ -1275,16 +1275,16 @@
 {
 	int n;
 	DPRINTF(E_DEBUG, L_HTTP, "HTTP RESPONSE: %.*s\n", h->res_buflen, h->res_buf);
-	n = send(h->ev.fd, h->res_buf, h->res_buflen, 0);
-	if(n<0)
-	{
-		DPRINTF(E_ERROR, L_HTTP, "send(res_buf): %s\n", strerror(errno));
-	}
-	else if(n < h->res_buflen)
-	{
-		/* TODO : handle correctly this case */
-		DPRINTF(E_ERROR, L_HTTP, "send(res_buf): %d bytes sent (out of %d)\n",
-						n, h->res_buflen);
+
+	long unsigned int sent = 0;
+	while (sent < (size_t)h->res_buflen) {
+		n = send(h->ev.fd, h->res_buf + sent, h->res_buflen - sent, 0);
+		if(n<0)
+		{
+			DPRINTF(E_ERROR, L_HTTP, "send(res_buf): %s\n", strerror(errno));
+			break;
+		}
+		sent += n;
 	}
 }
 
@@ -1293,22 +1293,17 @@
 {
 	int n;
 
-	n = send(h->ev.fd, header, size, flags);
-	if(n<0)
-	{
-		DPRINTF(E_ERROR, L_HTTP, "send(res_buf): %s\n", strerror(errno));
-	} 
-	else if(n < h->res_buflen)
-	{
-		/* TODO : handle correctly this case */
-		DPRINTF(E_ERROR, L_HTTP, "send(res_buf): %d bytes sent (out of %d)\n",
-						n, h->res_buflen);
-	}
-	else
-	{
-		return 0;
-	}
-	return 1;
+	size_t sent = 0;
+	while (sent < size) {
+		n = send(h->ev.fd, header + sent, size - sent, flags);
+		if(n<0)
+		{
+			DPRINTF(E_ERROR, L_HTTP, "send(res_buf): %s\n", strerror(errno));
+			return 1;
+		}
+		sent += n;
+	}
+	return 0;
 }
 
 static void
