name: Build native deps
on:
  push:
    paths:
      - 'stages/**'
      - 'patches/**'
      - 'scripts/**'
      - 'Dockerfile'
      - '.github/workflows/release.yml'
    branches:
      - main
  pull_request:
    paths:
      - 'stages/**'
      - 'patches/**'
      - 'scripts/**'
      - 'Dockerfile'
      - '.github/workflows/release.yml'
  workflow_dispatch:

# Cancel previous runs of the same workflow on the same branch.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-minidlna:
    strategy:
      matrix:
        settings:
          - target: x86_64-darwin-apple
          - target: aarch64-darwin-apple
          - target: x86_64-linux-gnu
          - target: aarch64-linux-gnu
          - target: x86_64-linux-musl
          - target: aarch64-linux-musl
    name: Build minidlna ${{ matrix.settings.target }}
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          platforms: linux/amd64
          driver-opts: |
            image=moby/buildkit:master
            network=host

      - name: Build minidlna
        run: |
          set -euxo pipefail

          TARGET=${{ matrix.settings.target }}
          docker build --no-cache --build-arg TARGET="$TARGET" --build-arg VERSION="$(echo ${{ github.ref }} | sed -E 's/refs\/tags\/v?//g' | sed -E 's/[^0-9.]//g')" -o . .
          mv out/src.tar.xz ./minidlna-${{ matrix.settings.target }}-src.tar.xz
          export XZ_OPT='-T0 -7'
          tar -cJf "minidlna-${{ matrix.settings.target }}.tar.xz" -C out .

      - name: Publish minidlna
        uses: actions/upload-artifact@v4
        with:
          name: minidlna-${{ matrix.settings.target }}
          path: minidlna-${{ matrix.settings.target }}.tar.xz
          if-no-files-found: error

      - name: Publish built source
        uses: actions/upload-artifact@v4
        with:
          name: minidlna-${{ matrix.settings.target }}-src
          path: minidlna-${{ matrix.settings.target }}-src.tar.xz
          if-no-files-found: warn

  release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    name: Create Release
    needs: build-minidlna
    permissions:
      contents: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          files: '*/**'
